MODULE test =
BEGIN
    STRUCTURE
        BLK[O,P,S,E;BS,UNIT=4] =
            [BS*UNIT]
            (BLK+O*UNIT)<P,S,E>;
    FIELD
        DSC_FIELDS = 
            SET
            DSC$W_LENGTH = [0,0,16,0],
            DSC$B_CLASS  = [2,0,8,0],
            DSC$B_DTYPE  = [3,0,8,0],
            DSC$A_POINTER= [4,0,32,0]
            TES;
    LITERAL
        DSC$K_S_BLN = 8,
        DSC$K_CLASS_S = 2,
        DSC$K_DTYPE_T = 14;
    OWN
        QQQ : BLK [DSC$K_S_BLN,BYTE] FIELD (DSC_FIELDS),
        QTEXT : BLK [64,BYTE];
        
    PSECT
        NODEFAULT = FARFEL (EXECUTE,OVERLAY),
        GLOBAL = $CODE$,
        CODE = $OWN$;
    OWN
        ALPHA : WORD ALIGN(2) PSECT(FARFEL) VOLATILE,
        BETA  : LONG INITIAL(37) ALIAS,
        GAMMA : LONG,
        MU : WORD;
    GLOBAL
        BITE : SIGNED WORD;
    EXTERNAL
        ME : LONG UNSIGNED;        
    LITERAL
        Z = 3 + 4,
        Y = Z + 2 * 5;
%PRINT(%ASCII'Z is: ',%NUMBER(Z), %ASCII', Y is: ', %NUMBER(Y))
    LITERAL
        A = (Z + 5) * (Y - 5);
%PRINT('A is: ', %NUMBER(A))
    LITERAL
        T = A EQL 144,
        B = Z AND 3;
%PRINT('T is: ', %NUMBER(T))
%PRINT('B is: ', %NUMBER(B))
%PRINT('CTCE test: ',%NUMBER(%CTCE(A,B,T,Y,Z,%ASCII'HELLO')))
%PRINT('CTCE test 2: ',%NUMBER(%CTCE('hi there',%string('go','away'))))
%PRINT('DSC$W_LENGTH: ', %EXPLODE(%FIELDEXPAND(DSC$W_LENGTH)))
%PRINT('DSC$A_POINTER.0:', %NUMBER(%FIELDEXPAND(DSC$A_POINTER,0)))
%PRINT('DSC$A_POINTER.1:', %NUMBER(%FIELDEXPAND(DSC$A_POINTER,1)))
%PRINT('DSC$A_POINTER.2:', %NUMBER(%FIELDEXPAND(DSC$A_POINTER,2)))
%PRINT('DSC$A_POINTER.3:', %NUMBER(%FIELDEXPAND(DSC$A_POINTER,3)))
%PRINT('ALLOCATION(QQQ):', %NUMBER(%ALLOCATION(QQQ)))
%PRINT('SIZE(BLK[12]):', %NUMBER(%SIZE(BLK[12])))

    LABEL
        blklabel1, blklabel2;
        
    blklabel1:BEGIN
                QQQ[DSC$W_LENGTH] = 64;
                QQQ[DSC$B_DTYPE] = DSC$K_DTYPE_T;
                QQQ[DSC$B_CLASS] = DSC$K_CLASS_S;
                QQQ[DSC$A_POINTER] = QTEXT;
              END;
    CODECOMMENT 'hi there': blklabel2: BEGIN END;
    CODECOMMENT 'another': BEGIN END;
END
ELUDOM
